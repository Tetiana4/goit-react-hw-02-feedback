{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.styled.js","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Notification/Notification.styled.js","Components/Notification/Notification.jsx","Components/Section/Section.jsx","Components/Statistics/Statistics.styled.js","Components/Statistics/Statistics.jsx","Components/App/App.jsx","reportWebVitals.js","index.js"],"names":["Container","styled","div","Title","h2","Button","button","List","li","FeedbackOptions","this","props","options","onHandleButton","Object","keys","map","option","type","onClick","Component","propType","PropTypes","arrayOf","exact","string","isRequired","Message","p","Notification","message","Section","title","children","protoTypes","Statistics","onGood","onNeutral","onBad","onTotal","onPercentage","App","state","good","neutral","bad","leaveFeedback","setState","prevSate","values","reduce","acc","item","Math","round","countTotalFeedback","isShowStatistics","countPositiveFeedbackPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAEaA,EAAYC,IAAOC,IAAV,qGAOTC,EAAQF,IAAOG,GAAV,2HAQLC,EAASJ,IAAOK,OAAV,6SAkBNC,EAAON,IAAOO,GAAV,kJ,OC/BXC,E,4JACJ,WACE,MAAoCC,KAAKC,MAAjCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,eACjB,OACE,eAACb,EAAD,WACE,cAACG,EAAD,oCACA,mCACGW,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,cAACV,EAAD,UACE,cAACF,EAAD,CAAQa,KAAK,SAASC,QAAS,kBAAMN,EAAeI,IAApD,SACGA,KAFMA,e,GAROG,aAoBfX,IAEfA,EAAgBY,SAAW,CACzBT,QAASU,IAAUC,QACjBD,IAAUE,MAAM,CACdP,OAAQK,IAAUG,OAAOC,eC3BxB,I,IAAMC,EAAU1B,IAAO2B,EAAV,oGCKLC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACH,EAAD,UAAUG,KCDbC,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MAKQF,IAEfA,EAAQG,WAAa,CACnBF,MAAOV,IAAUG,OAAOC,YCbnB,IAAM1B,EAAYC,IAAOC,IAAV,mDAITC,EAAQF,IAAOG,GAAV,kJCQH+B,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,QAASC,EAAtC,EAAsCA,aAAtC,OACjB,eAAC,EAAD,WACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCgDWC,E,4MAjDbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAYPC,cAAgB,SAAA7B,GACd,EAAK8B,UAAS,SAAAC,GAAQ,sBACnB/B,EAAS+B,EAAS/B,GAAU,O,wDAXjC,WAEE,OADsBH,OAAOmC,OAAOvC,KAAKgC,OACpBQ,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,O,6CAGnD,WACE,OAAOC,KAAKC,MAAyB,IAAlB5C,KAAKgC,MAAMC,KAAcjC,KAAK6C,wB,oBASnD,WACE,MAA+B7C,KAAKgC,MAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBW,EAAmB9C,KAAK6C,qBAC9B,OACE,qCACE,cAAC,EAAD,CACE3C,QAASF,KAAKgC,MACd7B,eAAgBH,KAAKoC,iBAGrBU,GAAoB,cAAC,EAAD,CAAc1B,QAAQ,sBAC3C0B,GACC,eAAC,EAAD,WACE,cAAC,EAAD,0BACA,cAAC,EAAD,CACEpB,OAAQO,EACRN,UAAWO,EACXN,MAAOO,EACPN,QAAS7B,KAAK6C,qBACdf,aAAc9B,KAAK+C,8C,GAzCfrC,aCIHsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.d3b7b3d2.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px;\n\n  background-color: #cea9a1;\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 30px;\n\n  color: #eee2df;\n  text-transform: uppercase;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 80px;\n  height: 30px;\n\n  background-color: #452c27;\n  color: #c69a91;\n\n  border-radius: 10px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.25s linear 0s;\n  &:hover,\n  &:focus {\n    border: 1px solid #cea9a1;\n    transform: scale(1.1);\n  }\n`;\n\nexport const List = styled.li`\n  margin: 0 10px;\n  display: inline-flex;\n  justify-content: center;\n  text-align: center;\n\n  list-style: none;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Title, List, Button } from './FeedbackOptions.styled';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, onHandleButton } = this.props;\n    return (\n      <Container>\n        <Title>Please leave feedback</Title>\n        <>\n          {Object.keys(options).map(option => (\n            <List key={option}>\n              <Button type=\"button\" onClick={() => onHandleButton(option)}>\n                {option}\n              </Button>\n            </List>\n          ))}\n        </>\n      </Container>\n    );\n  }\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propType = {\n  options: PropTypes.arrayOf(\n    PropTypes.exact({\n      option: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import styled from '@emotion/styled';\n\nexport const Message = styled.p`\n  text-align: center;\n  text-transform: uppercase;\n  color: #452c27;\n`;\n","import React from 'react';\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n\nSection.protoTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  text-align: center;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 50px;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 20px;\n\n  color: #452c27;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container } from './Statistics.styled';\n\nconst Statistics = ({ onGood, onNeutral, onBad, onTotal, onPercentage }) => (\n  <Container>\n    <p>Good: {onGood}</p>\n    <p>Neutral: {onNeutral}</p>\n    <p>Bad: {onBad}</p>\n    <p>Total: {onTotal}</p>\n    <p>Positive feedback: {onPercentage}%</p>\n  </Container>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  onGood: PropTypes.number.isRequired,\n  onNeutral: PropTypes.number.isRequired,\n  onBad: PropTypes.number.isRequired,\n  onTotal: PropTypes.number.isRequired,\n  onPercentage: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Notification from '../Notification/Notification';\nimport Section from '../Section/Section';\nimport Statistics from '../Statistics/Statistics';\nimport { Title } from '../Statistics/Statistics.styled';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback() {\n    const totalFeedback = Object.values(this.state);\n    return totalFeedback.reduce((acc, item) => acc + item);\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  }\n\n  leaveFeedback = option => {\n    this.setState(prevSate => ({\n      [option]: prevSate[option] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const isShowStatistics = this.countTotalFeedback();\n    return (\n      <>\n        <FeedbackOptions\n          options={this.state}\n          onHandleButton={this.leaveFeedback}\n        />\n\n        {!isShowStatistics && <Notification message=\"No feedback given\" />}\n        {isShowStatistics && (\n          <Section>\n            <Title>Statistics:</Title>\n            <Statistics\n              onGood={good}\n              onNeutral={neutral}\n              onBad={bad}\n              onTotal={this.countTotalFeedback()}\n              onPercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}